################### SOURCING ############### 

export PATH="$PATH:/Users/bwnyasse/dev/flutter/bin"
export PATH="$PATH":"$HOME/.pub-cache/bin"

export VISUAL=vim
export EDITOR="$VISUAL"

# Tell homebrew to not autoupdate every single time I run it (just once a week).
export HOMEBREW_AUTO_UPDATE_SECS=604800

###### GCP Config ######
# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/bwnyasse/Documents/gcp/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/bwnyasse/Documents/gcp/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/bwnyasse/Documents/gcp/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/bwnyasse/Documents/gcp/google-cloud-sdk/completion.zsh.inc'; fi

################### ALIAS ############### 
#########################################
alias h='history'
alias c='clear'
alias ll='ls -alF'
alias zshreload="source ~/.zshrc"
alias gogr='cd ~/gr'
alias godotfiles='cd ~/.dotfiles'

## ------------------
## FZF - no duplicate line in zsh history
##
setopt EXTENDED_HISTORY
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_FIND_NO_DUPS
setopt HIST_SAVE_NO_DUPS
setopt HIST_BEEP

## -------------------
## DOCKER
##
# Docker image visualization (usage: `dockviz images -t`).
alias dockviz="docker run --rm -v /var/run/docker.sock:/var/run/docker.sock nate/dockviz"

## -------------------
## GIT
##
alias gs='git status'
alias gst='git status'
alias gpr='git pull --rebase'
alias gl='git log --pretty=oneline --abbrev-commit'
alias gf='git fetch;git fetch --tags'
alias gitchmodexec='git update-index --chmod=+x'
alias gsetorigin='git remote set-url origin '
alias gcleancache='git rm --cached -r . && git reset --hard'
alias gitcredentialhelper='git config --global credential.helper "cache --timeout=3600"'

## -------------------
## MAVEN
##
alias install='mvn clean install'
alias installD='mvn clean install -DskipTests=true'
alias installN='mvn install'
alias compile='mvn clean compile'
alias compileD='mvn clean compile -DskipTests=true'
alias compileN='mvn compile'
alias mvndoc='mvn clean site site:run "-Dsite.outputEncoding=ISO-8859-1"'

################ FUNCTIONS ############### 
##########################################

## --------------------
## GCLOUD
##
alias gcloud_current_project='gcloud config get-value project'

gcloudconnect() {
  local project=$1
  gcloud alpha cloud-shell ssh --project $project
}

gcloud_activate_service_for_dm() {
  gcloud services enable deploymentmanager.googleapis.com && \
  gcloud services enable cloudresourcemanager.googleapis.com && \
  gcloud services enable cloudbilling.googleapis.com && \
  gcloud services enable iam.googleapis.com && \
  gcloud services enable servicemanagement.googleapis.com
}

## Create a deployment for a given config.yaml file
gcloud_deployment_create() {
  local name=$1
  gcloud deployment-manager deployments create $1 --config config.yaml
}



# Enter a running Docker container.
denter() {
  if [[ ! "$1" ]] ; then
      echo "You must supply a container ID or name."
      return 0
  fi

  docker exec -it $1 bash
  return 0
}

# Git upstream branch syncer.
# Usage: gsync master (checks out master, pull upstream, push origin).
gitsync() {
  if [[ ! "$1" ]] ; then
      echo "You must supply a branch."
      return 0
  fi

  BRANCHES=$(git branch --list $1)
  if [ ! "$BRANCHES" ] ; then
     echo "Branch $1 does not exist."
     return 0
  fi

  git checkout "$1" && \
  git pull upstream "$1" && \
  git push origin "$1"
}

# Delete a given line number in the known_hosts file.
knownrm() {
  re='^[0-9]+$'
  if ! [[ $1 =~ $re ]] ; then
    echo "error: line number missing" >&2;
  else
    sed -i '' "$1d" ~/.ssh/known_hosts
  fi
}

push-ssh-key() {
  ssh $1 "echo '`cat ~/.ssh/id_rsa.pub`' >> ~/.ssh/authorized_keys"
}

octalpermission_file() {
    stat -c "%a %n" "$1"
}

my_public_ip() {
    curl https://ipinfo.io/ip
}

## -------------------
## VMS CONNECTION
##
go() {
    host_connection=$1
    ssh -oStrictHostKeyChecking=no $host_connection
}

######" Go TO VPS"
go_mjy() {
    go mjy
}

go_ovh1(){
    go ovh1
}
go_ovh2(){
    go ovh2
}
go_scaleway1(){
    go scaleway1
}
go_scaleway2(){
    go scaleway2
}




